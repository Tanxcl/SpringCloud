<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>SpringCloud</artifactId>
        <groupId>org.example</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>microservice-dept-8001</artifactId>

    <dependencies>

        <!-- 引入microservice-api模块内容-->
<!--        <dependency>-->
<!--            <groupId>org.example</groupId>-->
<!--            <artifactId>microservice-api</artifactId>-->
<!--            <version>1.0-SNAPSHOT</version>-->
<!--&lt;!&ndash;-->
<!--                <scope>compile</scope>标签作用-->
<!--                    compile：编译依赖范围（默认），使用此依赖范围对于编译、测试、运行三种 classpath 都有效，即在编译、测试和运行的时候都要使用该依赖jar包-->
<!--                    test1：测试依赖范围，从字面意思就可以知道此依赖范围只能用于测试classpath，而在编译和运行项目时无法使用此类依赖，典型的是JUnit，它只用于编译测试代码和运行测试代码的时候才需要；-->
<!--                    provided：此依赖范围，对于编译和测试classpath有效，而对运行时无效-->
<!--                    runtime：运行时依赖范围，对于测试和运行classpath有效，但是在编译主代码时无效，典型的就是JDBC驱动实现(这个一般很少用到)-->
<!--&ndash;&gt;-->
<!--        </dependency>-->

        <!--集成redis-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <version>2.3.10.RELEASE</version>
        </dependency>

        <!--序列化-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.74</version>
            <scope>compile</scope>
        </dependency>

    </dependencies>

</project>
